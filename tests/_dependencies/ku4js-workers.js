(function(a){function d(h){if(!$.exists(Worker)){throw $.ku4exception("Unsupported Feature","Client does not support Workers.")}var g=$.observer(),j=$.observer(),f=$.observer(),e=$.observer(),i=new Worker(h);i.onmessage=function(k){j.notify(k.data)};i.onerror=function(k){e.notify(k.data)};this._processId=$.uid();this._onInvoked=g;this._onSuccess=j;this._onCanceled=f;this._onError=e;this._worker=i}d.prototype={processId:function(){return this._processId},onInvoked:function(f,e){this._onInvoked.add(function(){f.call(e,this._processId)},this);return this},onSuccess:function(f,e){this._onSuccess.add(function(h){var g=$.json.deserialize(h);if(!$.isArray(g)){g=[g]}g.push(this._processId);f.apply(e,g)},this);return this},onCanceled:function(f,e){this._onCanceled.add(function(){f.call(e,this._processId)},this);return this},onError:function(f,e){this._onError.add(function(h){var g=$.json.deserialize(h);if(!$.isArray(g)){g=[g]}g.push(this._processId);f.apply(e,g)},this);return this},invoke:function(e,i,j,f,h){var g=$.json.serialize([e,i,j,f,h]);this._worker.postMessage(g);this._onInvoked.notify(this._processId);return this},cancel:function(){this._worker.terminate();this._onCanceled.notify(this._processId);return this}};$.ku4workerClient=function(e){return new d(e)};var b="ku4js-workers-thread.js";$.ku4workerClient.threadPath=function(e){b=e};$.ku4workerClient.thread=function(){try{return new d(b)}catch(f){throw $.ku4exception("Invalid path",$.str.format("ku4 threading requires a browser that supports Workers and a valid path to the ku4js-workers-thread.js file.You can set that path with the $.ku4workerClient.threadPath([PATH]) method. Current path: {0}",b))}};function c(){}c.prototype={execute:function(f,i){var h=($.exists(f)&&$.exists(f.data))?f.data:f,e=$.json.deserialize(h);if(!$.isArray(e)||e.length<1){return i(null)}var g=($.isBool(e[e.length-1]))?e.pop():false;if(g){e.push(i);$.ku4reflection.invoke(e)}else{return i($.ku4reflection.invoke(e))}}};$.ku4workerReceiver=function(){return new c()}})();